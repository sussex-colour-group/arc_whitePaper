% Process data into the format needed

%% Convert mat file to csv

clc, clear, close all

% Raw data not shared (privacy, and also it is 1.3TB)
% .mat file generated by: arc_ellipse/arc_ImageAnalysis/arc_extractGoProImageStatsV1.m
% TODO Still not sure whether we will share this 1.5GB .mat file

repoHomeDir = ['..',filesep,'..',filesep,'..'];
addpath(repoHomeDir);
addpath([repoHomeDir,filesep,'imageanalysis']);

paths = getLocalPaths;

load(paths.GoProProcessedData,'fileList');

% remove some fields which won't work nicely in a csv
fileList = rmfield(fileList,'FM_O');
fileList = rmfield(fileList,'FM_T');
fileList = rmfield(fileList,'MondStats');
fileList = rmfield(fileList,'DiscrStats');

if ~exist(['..',filesep,'GoPro'],"dir")
    mkdir(['..',filesep,'GoPro'])
end
writetable(struct2table(fileList),['..',filesep,'GoPro',filesep,'GoPro.csv']);

%% Convert that csv into a matrix that is easier for later plotting

clc, clear, close all

t = readtable(['..',filesep,'GoPro',filesep,'GoPro.csv']);

mat = NaN([size(t,1),6]);

paths = getLocalPaths;
data.PP = load(paths.PPProcessedData,'resultsTable');
stdLLM = std([data.PP.resultsTable.MeanLLM],"omitnan");
stdSLM = std([data.PP.resultsTable.MeanSLM],"omitnan");

for i = 1:size(t,1)
    try

        mat(i,1) = t.meanMB_1(i);
        mat(i,2) = t.meanMB_2(i);
        mat(i,3) = t.meanMB_3(i);

                % seasonNames = {'Summer','Autumn','Winter','Spring'};
        if strcmp(t.season{i},'Summer')
            mat(i,4) = 1;
        elseif strcmp(t.season{i},'Autumn')
            mat(i,4) = 2;
        elseif strcmp(t.season{i},'Winter')
            mat(i,4) = 3;
        elseif strcmp(t.season{i},'Spring')
            mat(i,4) = 4;
        end

        % locationNames = {'Tromso','Oslo'};
        if strcmp(t.location{i},'Tromso')
            mat(i,5) = 0;
        elseif strcmp(t.location{i},'Oslo')
            mat(i,5) = 1;
        end

        if isnan(t.meanMB_1(i)) % TODO The more robust way of doing this would be to edit MacBtoCL to return NaN when given NaN (it currently returns 0)
            mat(i,6) = NaN;
        else
            mat(i,6) = MacBtoCL([t.meanMB_1(i);t.meanMB_2(i)],[stdLLM,stdSLM]);
        end

    catch
        % warning('data transformation issue') % this is commented out because we currently only process a subset of the data, so there's lots of NaN placeholders
    end
end

clearNaNs = true;
if clearNaNs
    mat(isnan(mat(:,1)),:) = [];
end

writematrix(mat,['..',filesep,'GoPro',filesep,'GoPro_sub.csv']);
